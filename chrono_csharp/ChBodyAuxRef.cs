//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChBodyAuxRef : ChBody {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal ChBodyAuxRef(global::System.IntPtr cPtr, bool cMemoryOwn) : base(corePINVOKE.ChBodyAuxRef_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChBodyAuxRef obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          corePINVOKE.delete_ChBodyAuxRef(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public ChBodyAuxRef(ChCollisionSystemType collision_type) : this(corePINVOKE.new_ChBodyAuxRef__SWIG_0((int)collision_type), true) {
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChBodyAuxRef() : this(corePINVOKE.new_ChBodyAuxRef__SWIG_1(), true) {
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChBodyAuxRef(ChCollisionModel new_coll_model) : this(corePINVOKE.new_ChBodyAuxRef__SWIG_2(ChCollisionModel.getCPtr(new_coll_model)), true) {
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChBodyAuxRef(ChBodyAuxRef other) : this(corePINVOKE.new_ChBodyAuxRef__SWIG_3(ChBodyAuxRef.getCPtr(other)), true) {
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetFrame_REF_to_abs(ChFrameD mfra) {
    corePINVOKE.ChBodyAuxRef_SetFrame_REF_to_abs(swigCPtr, ChFrameD.getCPtr(mfra));
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public override ChFrameMovingD GetFrame_REF_to_abs() {
    ChFrameMovingD ret = new ChFrameMovingD(corePINVOKE.ChBodyAuxRef_GetFrame_REF_to_abs(swigCPtr), true);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetFrame_COG_to_REF(ChFrameD mloc) {
    corePINVOKE.ChBodyAuxRef_SetFrame_COG_to_REF(swigCPtr, ChFrameD.getCPtr(mloc));
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChFrameD GetFrame_COG_to_REF() {
    ChFrameD ret = new ChFrameD(corePINVOKE.ChBodyAuxRef_GetFrame_COG_to_REF(swigCPtr), true);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetFrame_REF_to_COG(ChFrameD mloc) {
    corePINVOKE.ChBodyAuxRef_SetFrame_REF_to_COG(swigCPtr, ChFrameD.getCPtr(mloc));
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChFrameD GetFrame_REF_to_COG() {
    ChFrameD ret = new ChFrameD(corePINVOKE.ChBodyAuxRef_GetFrame_REF_to_COG(swigCPtr), true);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override void Update(bool update_assets) {
    corePINVOKE.ChBodyAuxRef_Update__SWIG_0(swigCPtr, update_assets);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public override void Update() {
    corePINVOKE.ChBodyAuxRef_Update__SWIG_1(swigCPtr);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public override void ArchiveOut(SWIGTYPE_p_chrono__ChArchiveOut marchive) {
    corePINVOKE.ChBodyAuxRef_ArchiveOut(swigCPtr, SWIGTYPE_p_chrono__ChArchiveOut.getCPtr(marchive));
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public override void ArchiveIn(SWIGTYPE_p_chrono__ChArchiveIn marchive) {
    corePINVOKE.ChBodyAuxRef_ArchiveIn(swigCPtr, SWIGTYPE_p_chrono__ChArchiveIn.getCPtr(marchive));
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

}
