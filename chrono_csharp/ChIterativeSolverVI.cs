//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChIterativeSolverVI : ChIterativeSolver {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal ChIterativeSolverVI(global::System.IntPtr cPtr, bool cMemoryOwn) : base(corePINVOKE.ChIterativeSolverVI_SWIGSmartPtrUpcast(cPtr), true) {
	swigCMemOwnDerived = cMemoryOwn;
	swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChIterativeSolverVI obj) {
	return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
	lock(this) {
	  if (swigCPtr.Handle != global::System.IntPtr.Zero) {
		if (swigCMemOwnDerived) {
		  swigCMemOwnDerived = false;
		  corePINVOKE.delete_ChIterativeSolverVI(swigCPtr);
		}
		swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
	  }
	  base.Dispose(disposing);
	}
  }

  public void SetOmega(double mval) {
	corePINVOKE.ChIterativeSolverVI_SetOmega(swigCPtr, mval);
	if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetSharpnessLambda(double mval) {
	corePINVOKE.ChIterativeSolverVI_SetSharpnessLambda(swigCPtr, mval);
	if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetRecordViolation(bool mval) {
	corePINVOKE.ChIterativeSolverVI_SetRecordViolation(swigCPtr, mval);
	if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public double GetOmega() {
	double ret = corePINVOKE.ChIterativeSolverVI_GetOmega(swigCPtr);
	if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
	return ret;
  }

  public double GetSharpnessLambda() {
	double ret = corePINVOKE.ChIterativeSolverVI_GetSharpnessLambda(swigCPtr);
	if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
	return ret;
  }

  public int GetIterations() {
	int ret = corePINVOKE.ChIterativeSolverVI_GetIterations(swigCPtr);
	if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
	return ret;
  }

  public SWIGTYPE_p_std__vectorT_double_t GetViolationHistory() {
	SWIGTYPE_p_std__vectorT_double_t ret = new SWIGTYPE_p_std__vectorT_double_t(corePINVOKE.ChIterativeSolverVI_GetViolationHistory(swigCPtr), false);
	if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
	return ret;
  }

  public SWIGTYPE_p_std__vectorT_double_t GetDeltalambdaHistory() {
	SWIGTYPE_p_std__vectorT_double_t ret = new SWIGTYPE_p_std__vectorT_double_t(corePINVOKE.ChIterativeSolverVI_GetDeltalambdaHistory(swigCPtr), false);
	if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
	return ret;
  }

  public void ArchiveOut(SWIGTYPE_p_chrono__ChArchiveOut marchive) {
	corePINVOKE.ChIterativeSolverVI_ArchiveOut(swigCPtr, SWIGTYPE_p_chrono__ChArchiveOut.getCPtr(marchive));
	if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public void ArchiveIn(SWIGTYPE_p_chrono__ChArchiveIn marchive) {
	corePINVOKE.ChIterativeSolverVI_ArchiveIn(swigCPtr, SWIGTYPE_p_chrono__ChArchiveIn.getCPtr(marchive));
	if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

}
