//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChMaterialSurfaceSMC : ChMaterialSurface {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal ChMaterialSurfaceSMC(global::System.IntPtr cPtr, bool cMemoryOwn) : base(corePINVOKE.ChMaterialSurfaceSMC_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChMaterialSurfaceSMC obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          corePINVOKE.delete_ChMaterialSurfaceSMC(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public ChMaterialSurfaceSMC() : this(corePINVOKE.new_ChMaterialSurfaceSMC__SWIG_0(), true) {
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChMaterialSurfaceSMC(ChMaterialSurfaceSMC other) : this(corePINVOKE.new_ChMaterialSurfaceSMC__SWIG_1(ChMaterialSurfaceSMC.getCPtr(other)), true) {
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public override ChMaterialSurface Clone() {
    global::System.IntPtr cPtr = corePINVOKE.ChMaterialSurfaceSMC_Clone(swigCPtr);
    ChMaterialSurfaceSMC ret = (cPtr == global::System.IntPtr.Zero) ? null : new ChMaterialSurfaceSMC(cPtr, true);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override ChContactMethod GetContactMethod() {
    ChContactMethod ret = (ChContactMethod)corePINVOKE.ChMaterialSurfaceSMC_GetContactMethod(swigCPtr);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetYoungModulus(float val) {
    corePINVOKE.ChMaterialSurfaceSMC_SetYoungModulus(swigCPtr, val);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public float GetYoungModulus() {
    float ret = corePINVOKE.ChMaterialSurfaceSMC_GetYoungModulus(swigCPtr);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetPoissonRatio(float val) {
    corePINVOKE.ChMaterialSurfaceSMC_SetPoissonRatio(swigCPtr, val);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public float GetPoissonRatio() {
    float ret = corePINVOKE.ChMaterialSurfaceSMC_GetPoissonRatio(swigCPtr);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetAdhesion(float val) {
    corePINVOKE.ChMaterialSurfaceSMC_SetAdhesion(swigCPtr, val);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public float GetAdhesion() {
    float ret = corePINVOKE.ChMaterialSurfaceSMC_GetAdhesion(swigCPtr);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetAdhesionMultDMT(float val) {
    corePINVOKE.ChMaterialSurfaceSMC_SetAdhesionMultDMT(swigCPtr, val);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public float GetAdhesionMultDMT() {
    float ret = corePINVOKE.ChMaterialSurfaceSMC_GetAdhesionMultDMT(swigCPtr);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetAdhesionSPerko(float val) {
    corePINVOKE.ChMaterialSurfaceSMC_SetAdhesionSPerko(swigCPtr, val);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public float GetAdhesionSPerko() {
    float ret = corePINVOKE.ChMaterialSurfaceSMC_GetAdhesionSPerko(swigCPtr);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetKn(float val) {
    corePINVOKE.ChMaterialSurfaceSMC_SetKn(swigCPtr, val);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetKt(float val) {
    corePINVOKE.ChMaterialSurfaceSMC_SetKt(swigCPtr, val);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetGn(float val) {
    corePINVOKE.ChMaterialSurfaceSMC_SetGn(swigCPtr, val);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetGt(float val) {
    corePINVOKE.ChMaterialSurfaceSMC_SetGt(swigCPtr, val);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public float GetKn() {
    float ret = corePINVOKE.ChMaterialSurfaceSMC_GetKn(swigCPtr);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public float GetKt() {
    float ret = corePINVOKE.ChMaterialSurfaceSMC_GetKt(swigCPtr);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public float GetGn() {
    float ret = corePINVOKE.ChMaterialSurfaceSMC_GetGn(swigCPtr);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public float GetGt() {
    float ret = corePINVOKE.ChMaterialSurfaceSMC_GetGt(swigCPtr);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual void StreamOut(ChStreamOutAscii mstream) {
    corePINVOKE.ChMaterialSurfaceSMC_StreamOut(swigCPtr, ChStreamOutAscii.getCPtr(mstream));
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public override void ArchiveOut(SWIGTYPE_p_chrono__ChArchiveOut marchive) {
    corePINVOKE.ChMaterialSurfaceSMC_ArchiveOut(swigCPtr, SWIGTYPE_p_chrono__ChArchiveOut.getCPtr(marchive));
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public override void ArchiveIn(SWIGTYPE_p_chrono__ChArchiveIn marchive) {
    corePINVOKE.ChMaterialSurfaceSMC_ArchiveIn(swigCPtr, SWIGTYPE_p_chrono__ChArchiveIn.getCPtr(marchive));
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public float young_modulus {
    set {
      corePINVOKE.ChMaterialSurfaceSMC_young_modulus_set(swigCPtr, value);
      if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = corePINVOKE.ChMaterialSurfaceSMC_young_modulus_get(swigCPtr);
      if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float poisson_ratio {
    set {
      corePINVOKE.ChMaterialSurfaceSMC_poisson_ratio_set(swigCPtr, value);
      if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = corePINVOKE.ChMaterialSurfaceSMC_poisson_ratio_get(swigCPtr);
      if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float constant_adhesion {
    set {
      corePINVOKE.ChMaterialSurfaceSMC_constant_adhesion_set(swigCPtr, value);
      if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = corePINVOKE.ChMaterialSurfaceSMC_constant_adhesion_get(swigCPtr);
      if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float adhesionMultDMT {
    set {
      corePINVOKE.ChMaterialSurfaceSMC_adhesionMultDMT_set(swigCPtr, value);
      if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = corePINVOKE.ChMaterialSurfaceSMC_adhesionMultDMT_get(swigCPtr);
      if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float adhesionSPerko {
    set {
      corePINVOKE.ChMaterialSurfaceSMC_adhesionSPerko_set(swigCPtr, value);
      if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = corePINVOKE.ChMaterialSurfaceSMC_adhesionSPerko_get(swigCPtr);
      if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float kn {
    set {
      corePINVOKE.ChMaterialSurfaceSMC_kn_set(swigCPtr, value);
      if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = corePINVOKE.ChMaterialSurfaceSMC_kn_get(swigCPtr);
      if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float kt {
    set {
      corePINVOKE.ChMaterialSurfaceSMC_kt_set(swigCPtr, value);
      if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = corePINVOKE.ChMaterialSurfaceSMC_kt_get(swigCPtr);
      if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float gn {
    set {
      corePINVOKE.ChMaterialSurfaceSMC_gn_set(swigCPtr, value);
      if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = corePINVOKE.ChMaterialSurfaceSMC_gn_get(swigCPtr);
      if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float gt {
    set {
      corePINVOKE.ChMaterialSurfaceSMC_gt_set(swigCPtr, value);
      if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = corePINVOKE.ChMaterialSurfaceSMC_gt_get(swigCPtr);
      if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}
