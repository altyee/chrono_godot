//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChRandomShapeCreatorFromFamilies : ChRandomShapeCreator {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal ChRandomShapeCreatorFromFamilies(global::System.IntPtr cPtr, bool cMemoryOwn) : base(corePINVOKE.ChRandomShapeCreatorFromFamilies_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChRandomShapeCreatorFromFamilies obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          corePINVOKE.delete_ChRandomShapeCreatorFromFamilies(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public ChRandomShapeCreatorFromFamilies() : this(corePINVOKE.new_ChRandomShapeCreatorFromFamilies(), true) {
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public override ChBody RandomGenerate(ChCoordsysD mcoords) {
    global::System.IntPtr cPtr = corePINVOKE.ChRandomShapeCreatorFromFamilies_RandomGenerate(swigCPtr, ChCoordsysD.getCPtr(mcoords));
    ChBody ret = (cPtr == global::System.IntPtr.Zero) ? null : new ChBody(cPtr, true);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void Reset() {
    corePINVOKE.ChRandomShapeCreatorFromFamilies_Reset(swigCPtr);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public void AddFamily(ChRandomShapeCreator family_generator, double mprobability) {
    corePINVOKE.ChRandomShapeCreatorFromFamilies_AddFamily(swigCPtr, ChRandomShapeCreator.getCPtr(family_generator), mprobability);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public void Setup() {
    corePINVOKE.ChRandomShapeCreatorFromFamilies_Setup(swigCPtr);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetProbabilityMode(ChRandomShapeCreatorFromFamilies.eChFamilyProbabilityMode mymode) {
    corePINVOKE.ChRandomShapeCreatorFromFamilies_SetProbabilityMode(swigCPtr, (int)mymode);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChRandomShapeCreatorFromFamilies.eChFamilyProbabilityMode GetProbabilityMode() {
    ChRandomShapeCreatorFromFamilies.eChFamilyProbabilityMode ret = (ChRandomShapeCreatorFromFamilies.eChFamilyProbabilityMode)corePINVOKE.ChRandomShapeCreatorFromFamilies_GetProbabilityMode(swigCPtr);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_std__vectorT_double_t GetObtainedPercentuals() {
    SWIGTYPE_p_std__vectorT_double_t ret = new SWIGTYPE_p_std__vectorT_double_t(corePINVOKE.ChRandomShapeCreatorFromFamilies_GetObtainedPercentuals(swigCPtr), false);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public enum eChFamilyProbabilityMode {
    PARTICLE_PROBABILITY,
    MASS_PROBABILITY
  }

}
