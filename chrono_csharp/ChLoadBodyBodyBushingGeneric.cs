//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.0
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ChLoadBodyBodyBushingGeneric : ChLoadBodyBody {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnDerived;

  internal ChLoadBodyBodyBushingGeneric(global::System.IntPtr cPtr, bool cMemoryOwn) : base(corePINVOKE.ChLoadBodyBodyBushingGeneric_SWIGSmartPtrUpcast(cPtr), true) {
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ChLoadBodyBodyBushingGeneric obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  protected override void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnDerived) {
          swigCMemOwnDerived = false;
          corePINVOKE.delete_ChLoadBodyBodyBushingGeneric(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      base.Dispose(disposing);
    }
  }

  public ChLoadBodyBodyBushingGeneric(ChBody mbodyA, ChBody mbodyB, ChFrameD abs_application, SWIGTYPE_p_Eigen__RefT_Eigen__MatrixT_double_Eigen__Dynamic_Eigen__Dynamic_Eigen__RowMajor_t_const_t mstiffness, SWIGTYPE_p_Eigen__RefT_Eigen__MatrixT_double_Eigen__Dynamic_Eigen__Dynamic_Eigen__RowMajor_t_const_t mdamping) : this(corePINVOKE.new_ChLoadBodyBodyBushingGeneric(ChBody.getCPtr(mbodyA), ChBody.getCPtr(mbodyB), ChFrameD.getCPtr(abs_application), SWIGTYPE_p_Eigen__RefT_Eigen__MatrixT_double_Eigen__Dynamic_Eigen__Dynamic_Eigen__RowMajor_t_const_t.getCPtr(mstiffness), SWIGTYPE_p_Eigen__RefT_Eigen__MatrixT_double_Eigen__Dynamic_Eigen__Dynamic_Eigen__RowMajor_t_const_t.getCPtr(mdamping)), true) {
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetStiffnessMatrix(SWIGTYPE_p_Eigen__RefT_Eigen__MatrixT_double_Eigen__Dynamic_Eigen__Dynamic_Eigen__RowMajor_t_const_t mstiffness) {
    corePINVOKE.ChLoadBodyBodyBushingGeneric_SetStiffnessMatrix(swigCPtr, SWIGTYPE_p_Eigen__RefT_Eigen__MatrixT_double_Eigen__Dynamic_Eigen__Dynamic_Eigen__RowMajor_t_const_t.getCPtr(mstiffness));
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_chrono__ChMatrixNMT_double_6_6_t GetStiffnessMatrix() {
    SWIGTYPE_p_chrono__ChMatrixNMT_double_6_6_t ret = new SWIGTYPE_p_chrono__ChMatrixNMT_double_6_6_t(corePINVOKE.ChLoadBodyBodyBushingGeneric_GetStiffnessMatrix(swigCPtr), false);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetDampingMatrix(SWIGTYPE_p_Eigen__RefT_Eigen__MatrixT_double_Eigen__Dynamic_Eigen__Dynamic_Eigen__RowMajor_t_const_t mdamping) {
    corePINVOKE.ChLoadBodyBodyBushingGeneric_SetDampingMatrix(swigCPtr, SWIGTYPE_p_Eigen__RefT_Eigen__MatrixT_double_Eigen__Dynamic_Eigen__Dynamic_Eigen__RowMajor_t_const_t.getCPtr(mdamping));
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_chrono__ChMatrixNMT_double_6_6_t GetDampingMatrix() {
    SWIGTYPE_p_chrono__ChMatrixNMT_double_6_6_t ret = new SWIGTYPE_p_chrono__ChMatrixNMT_double_6_6_t(corePINVOKE.ChLoadBodyBodyBushingGeneric_GetDampingMatrix(swigCPtr), false);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetNeutralForce(ChVectorD mf) {
    corePINVOKE.ChLoadBodyBodyBushingGeneric_SetNeutralForce(swigCPtr, ChVectorD.getCPtr(mf));
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChVectorD GetNeutralForce() {
    ChVectorD ret = new ChVectorD(corePINVOKE.ChLoadBodyBodyBushingGeneric_GetNeutralForce(swigCPtr), true);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void SetNeutralTorque(ChVectorD mt) {
    corePINVOKE.ChLoadBodyBodyBushingGeneric_SetNeutralTorque(swigCPtr, ChVectorD.getCPtr(mt));
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
  }

  public ChVectorD GetNeutralTorque() {
    ChVectorD ret = new ChVectorD(corePINVOKE.ChLoadBodyBodyBushingGeneric_GetNeutralTorque(swigCPtr), true);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChFrameD NeutralDisplacement() {
    ChFrameD ret = new ChFrameD(corePINVOKE.ChLoadBodyBodyBushingGeneric_NeutralDisplacement(swigCPtr), true);
    if (corePINVOKE.SWIGPendingException.Pending) throw corePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
